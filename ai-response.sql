-- Generated by GitHub Copilot
--
-- Step 1: Create a function for the books table
CREATE OR REPLACE FUNCTION update_books_searchable() RETURNS TRIGGER AS $$
BEGIN
  NEW.searchable := to_tsvector('english', NEW.title || ' ' || NEW.title_full || ' ' || (SELECT name_first || ' ' || name_last FROM authors WHERE author_id = NEW.author_id));
  RETURN NEW;
END
$$ LANGUAGE plpgsql;

-- Step 2: Create a trigger for the books table
CREATE TRIGGER update_books_searchable_trigger
BEFORE INSERT OR UPDATE ON books
FOR EACH ROW EXECUTE FUNCTION update_books_searchable();

-- Step 3: Create a function for the authors table
CREATE OR REPLACE FUNCTION update_authors_searchable() RETURNS TRIGGER AS $$
BEGIN
  UPDATE books
  SET searchable = to_tsvector('english', NEW.name_first || ' ' || NEW.name_last || ' ' || (SELECT title || ' ' || title_full FROM books WHERE author_id = NEW.author_id))
  WHERE author_id = NEW.author_id;
  RETURN NEW;
END
$$ LANGUAGE plpgsql;

-- Step 4: Create a trigger for the authors table
CREATE TRIGGER update_authors_searchable_trigger
AFTER UPDATE ON authors
FOR EACH ROW EXECUTE FUNCTION update_authors_searchable();
